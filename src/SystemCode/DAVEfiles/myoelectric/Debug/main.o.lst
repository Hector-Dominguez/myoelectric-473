   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.__NVIC_EnableIRQ,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	__NVIC_EnableIRQ:
  23              	.LFB25:
  24              	 .file 1 "N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include/core_cm0.h"
   1:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**************************************************************************//**
   2:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * @file     core_cm0.h
   3:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * @version  V5.0.5
   5:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * @date     28. May 2018
   6:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
   7:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*
   8:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  *
  10:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  *
  12:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * not use this file except in compliance with the License.
  14:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * You may obtain a copy of the License at
  15:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  *
  16:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  *
  18:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * See the License for the specific language governing permissions and
  22:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  * limitations under the License.
  23:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
  24:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  25:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #if   defined ( __ICCARM__ )
  26:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #elif defined (__clang__)
  28:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif
  30:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  31:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  34:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #include <stdint.h>
  35:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  36:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
  37:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
  38:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif
  39:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  40:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
  41:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  44:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  47:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****      Unions are used for effective representation of core registers.
  49:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  50:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
  53:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  54:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  55:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
  56:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  *                 CMSIS definitions
  57:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  58:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
  59:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup Cortex_M0
  60:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
  61:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
  62:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  63:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #include "cmsis_version.h"
  64:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  
  65:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*  CMSIS CM0 definitions */
  66:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  71:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  73:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     This core does not support an FPU at all
  75:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** */
  76:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __FPU_USED       0U
  77:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  78:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #if defined ( __CC_ARM )
  79:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  82:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  83:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  87:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  88:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
  89:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  92:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  93:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
  94:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARMVFP__
  95:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  97:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
  98:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 102:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 103:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 104:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __FPU_VFP__
 105:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 107:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 108:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __CSMC__ )
 109:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 112:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 113:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif
 114:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 115:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 117:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 118:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 119:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** }
 120:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif
 121:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 122:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 124:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 126:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 129:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 130:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
 131:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif
 132:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 133:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* check device defines and use defaults */
 134:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __CM0_REV
 136:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #define __CM0_REV               0x0000U
 137:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 139:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 140:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 144:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 145:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 149:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif
 150:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 151:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 153:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 155:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     \li to specify the access to peripheral variables.
 157:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** */
 159:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 160:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #else
 162:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif
 164:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 167:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* following defines should be used for structure members */
 168:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 172:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group Cortex_M0 */
 173:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 174:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 175:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 176:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 177:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  *                 Register Abstraction
 178:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   Core Register contain:
 179:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register
 180:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Register
 181:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   - Core SCB Register
 182:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Register
 183:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 184:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 185:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** */
 188:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 189:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 190:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 191:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Core Register type definitions.
 193:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
 194:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 195:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 196:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 197:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 199:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 200:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** {
 201:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   struct
 202:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   {
 203:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** } APSR_Type;
 211:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 212:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* APSR Register Definitions */
 213:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 216:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 219:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 222:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 225:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 226:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 227:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 229:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 230:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** {
 231:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   struct
 232:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   {
 233:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** } IPSR_Type;
 238:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 239:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* IPSR Register Definitions */
 240:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 243:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 244:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 245:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 247:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 248:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** {
 249:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   struct
 250:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   {
 251:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** } xPSR_Type;
 262:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 263:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* xPSR Register Definitions */
 264:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 267:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 270:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 273:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 276:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 279:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 282:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 283:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 284:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 286:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 287:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** {
 288:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   struct
 289:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   {
 290:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** } CONTROL_Type;
 296:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 297:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* CONTROL Register Definitions */
 298:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 301:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 303:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 304:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 305:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 306:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
 309:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 310:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 311:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 312:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 314:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 315:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** {
 316:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0[31U];
 318:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RSERVED1[31U];
 320:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED2[31U];
 322:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED3[31U];
 324:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED4[64U];
 325:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** }  NVIC_Type;
 327:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 328:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 330:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 331:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 332:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 333:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
 336:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 337:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 338:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 339:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 341:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 342:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** {
 343:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0;
 346:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED1;
 350:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** } SCB_Type;
 353:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 354:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SCB CPUID Register Definitions */
 355:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 358:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 361:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 364:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 367:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 370:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 374:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 377:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 380:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 383:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 386:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 389:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 392:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 395:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 398:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 402:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 405:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 408:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 411:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 414:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Control Register Definitions */
 415:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 418:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 421:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 424:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 428:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 431:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 435:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 437:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 438:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 439:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 440:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
 443:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 444:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 445:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 446:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 448:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 449:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** {
 450:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** } SysTick_Type;
 455:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 456:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 460:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 463:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 466:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 469:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Reload Register Definitions */
 470:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 473:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Current Register Definitions */
 474:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 477:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 481:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 484:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 487:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 489:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 490:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 491:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 492:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
 496:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 497:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 499:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 500:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 501:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 502:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
 505:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 506:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 507:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 508:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted value.
 512:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** */
 513:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 515:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 516:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted bit field value.
 520:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** */
 521:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 523:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 525:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 526:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 527:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 528:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
 531:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 532:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 533:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* Memory mapping of Core Hardware */
 534:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 539:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 543:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 544:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*@} */
 545:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 546:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 547:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 548:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 549:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  *                Hardware Abstraction Layer
 550:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   Core Function Interface contains:
 551:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Functions
 552:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Functions
 553:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register Access Functions
 554:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 555:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 556:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** */
 558:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 559:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 560:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 561:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 563:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   @{
 567:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 568:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 569:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 573:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #else
 575:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 589:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 593:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #else
 595:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 599:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 601:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 602:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 607:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 608:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 614:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** 
 617:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** /**
 618:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Enable Interrupt
 619:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 622:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****  */
 623:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 624:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** {
  25              	 .loc 1 624 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 021C     	 mov r2,r0
  39 0008 FB1D     	 add r3,r7,#7
  40 000a 1A70     	 strb r2,[r3]
 625:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
  41              	 .loc 1 625 0
  42 000c FB1D     	 add r3,r7,#7
  43 000e 1B78     	 ldrb r3,[r3]
  44 0010 7F2B     	 cmp r3,#127
  45 0012 09D8     	 bhi .L1
 626:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   {
 627:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  46              	 .loc 1 627 0
  47 0014 064B     	 ldr r3,.L3
  48 0016 FA1D     	 add r2,r7,#7
  49 0018 1278     	 ldrb r2,[r2]
  50 001a 111C     	 mov r1,r2
  51 001c 1F22     	 mov r2,#31
  52 001e 0A40     	 and r2,r1
  53 0020 0121     	 mov r1,#1
  54 0022 9140     	 lsl r1,r1,r2
  55 0024 0A1C     	 mov r2,r1
  56 0026 1A60     	 str r2,[r3]
  57              	.L1:
 628:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h ****   }
 629:N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Include\core_cm0.h **** }
  58              	 .loc 1 629 0
  59 0028 BD46     	 mov sp,r7
  60 002a 02B0     	 add sp,sp,#8
  61              	 
  62 002c 80BD     	 pop {r7,pc}
  63              	.L4:
  64 002e C046     	 .align 2
  65              	.L3:
  66 0030 00E100E0 	 .word -536813312
  67              	 .cfi_endproc
  68              	.LFE25:
  70              	 .section .text.INTERRUPT_Enable,"ax",%progbits
  71              	 .align 2
  72              	 .code 16
  73              	 .thumb_func
  75              	INTERRUPT_Enable:
  76              	.LFB203:
  77              	 .file 2 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT/interrupt.h"
   1:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
   2:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @file interrupt.h
   3:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @date 2015-10-05
   4:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
   5:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * NOTE:
   6:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * regenerated.
   8:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
   9:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
  10:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @cond
  11:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  12:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * INTERRUPT v4.0.8 Helps the user to overwrite the provided ISR in system file
  13:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  14:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * Copyright (c) 2015, Infineon Technologies AG
  15:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * All rights reserved.
  16:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  17:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * following conditions are met:
  19:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  20:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  21:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   disclaimer.
  22:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  23:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  24:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  25:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  26:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  27:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   products derived from this software without specific prior written permission.
  28:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  29:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  37:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  40:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  41:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * Change History
  42:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * --------------
  43:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  44:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * 2015-02-16:
  45:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *     - Initial version<br>
  46:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  47:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * 2015-05-08:
  48:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *     - subpriority field is biased based on family<br>
  49:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  50:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * 2015-07-30:
  51:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *     - Added a field named "irqctrl" for XMC1400 devices
  52:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  53:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * 2015-10-05:
  54:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *     - Merged config elements into the APP structure
  55:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcond
  56:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
  57:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
  58:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
  59:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #ifndef INTERRUPT_H
  60:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #define INTERRUPT_H
  61:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
  62:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
  63:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * HEADER FILES
  64:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  65:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #include <xmc_common.h>
  66:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #include <DAVE_Common.h>
  67:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
  68:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #if (UC_SERIES == XMC14)
  69:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #include <xmc_scu.h>
  70:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #endif
  71:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
  72:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #include "interrupt_conf.h"
  73:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
  74:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
  75:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
  76:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @addtogroup INTERRUPT
  77:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @{
  78:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
  79:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
  80:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
  81:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * MACROS
  82:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  83:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
  84:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
  85:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * ENUMS
  86:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
  87:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
  88:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @ingroup INTERRUPT_enumerations
  89:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @{
  90:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
  91:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
  92:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * Initialization status.
  93:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
  94:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** typedef enum INTERRUPT_STATUS
  95:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** {
  96:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   INTERRUPT_STATUS_SUCCESS = 0U,  /**< APP initialization success */
  97:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   INTERRUPT_STATUS_FAILURE = 1U   /**< APP initialization failure */
  98:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** } INTERRUPT_STATUS_t;
  99:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
 100:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @}
 101:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
 102:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
 103:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
 104:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * DATA STRUCTURES
 105:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
 106:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
 107:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @ingroup INTERRUPT_datastructures
 108:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @{
 109:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
 110:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
 111:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
 112:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief This structure holds run-time configurations of INTERRUPT APP.
 113:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
 114:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** typedef struct INTERRUPT
 115:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** {
 116:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #if(UC_SERIES == XMC14)
 117:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   const XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 118:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #endif	
 119:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   const IRQn_Type node;       /**< Mapped NVIC Node */
 120:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   const uint8_t priority; 	  /**< Node Interrupt Priority */
 121:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #if(UC_FAMILY == XMC4)
 122:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   const uint8_t subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 123:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #endif  
 124:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   const bool enable_at_init;  /**< Interrupt enable for Node */
 125:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** } INTERRUPT_t;
 126:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
 127:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
 128:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @}
 129:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
 130:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
 131:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**************************************************************************************************
 132:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * API PROTOTYPES
 133:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  **************************************************************************************************
 134:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
 135:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #ifdef __cplusplus
 136:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** extern "C" {
 137:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** #endif
 138:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
 139:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
 140:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @ingroup INTERRUPT_apidoc
 141:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @{
 142:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
 143:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
 144:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
 145:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief Get INTERRUPT APP version.
 146:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @return @ref DAVE_APP_VERSION_t APP version information (major, minor and
 147:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *                                 patch number)
 148:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
 149:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * \par<b>Description: </b><br>
 150:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * The function can be used to check application software compatibility with a
 151:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * specific version of the APP.
 152:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @code
 153:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * #include <DAVE.h>
 154:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
 155:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * int main(void)
 156:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * {
 157:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   DAVE_APP_VERSION_t version;
 158:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   DAVE_Init();
 159:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   version = INTERRUPT_GetAppVersion();
 160:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   if(version.major != 4U)
 161:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   {
 162:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   }
 163:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   while(1)
 164:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   {}
 165:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *   return 0;
 166:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * }
 167:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcode<BR> </p>
 168:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
 169:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** DAVE_APP_VERSION_t INTERRUPT_GetAppVersion(void);
 170:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
 171:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief Initializes INTERRUPT APP instance.
 172:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @param handle Constant pointer to constant structure of type @ref INTERRUPT_t
 173:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @return @ref INTERRUPT_STATUS_t
 174:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 175:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * Pre-requisite: Instantiate one instance of INTERRUPT APP
 176:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @code
 177:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *  #include <DAVE.h>
 178:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
 179:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *  int main(void)
 180:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *  {
 181:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    DAVE_Init();  // INTERRUPT_Init(&INTERRUPT_0) is called within DAVE_Init()
 182:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    while(1)
 183:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    {}
 184:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    return 0;
 185:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *  }
 186:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcode<BR> </p>
 187:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
 188:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
 189:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** INTERRUPT_STATUS_t INTERRUPT_Init(const INTERRUPT_t *const handler);
 190:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** 
 191:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** /**
 192:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @brief Enables the IRQ.
 193:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @param handle Constant pointer to constant structure of type @ref INTERRUPT_t
 194:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @return None
 195:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 196:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * Pre-requisite: Instantiate one instance of INTERRUPT APP
 197:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @code
 198:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *  #include <DAVE.h>
 199:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *
 200:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *  int main(void)
 201:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *  {
 202:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    DAVE_Init(); // INTERRUPT_Init() is called within DAVE_Init()
 203:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    INTERRUPT_Enable(&INTERRUPT_0);
 204:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    while(1)
 205:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    {}
 206:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *    return 0;
 207:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  *  }
 208:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  * @endcode<BR> </p>
 209:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****  */
 210:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** __STATIC_INLINE void INTERRUPT_Enable(const INTERRUPT_t *const handler)
 211:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** {
  78              	 .loc 2 211 0
  79              	 .cfi_startproc
  80 0000 80B5     	 push {r7,lr}
  81              	.LCFI3:
  82              	 .cfi_def_cfa_offset 8
  83              	 .cfi_offset 7,-8
  84              	 .cfi_offset 14,-4
  85 0002 82B0     	 sub sp,sp,#8
  86              	.LCFI4:
  87              	 .cfi_def_cfa_offset 16
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI5:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
 212:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   XMC_ASSERT("Handler NULL", (handler != NULL));
 213:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h ****   NVIC_EnableIRQ(handler->node);
  92              	 .loc 2 213 0
  93 0008 7B68     	 ldr r3,[r7,#4]
  94 000a 9B78     	 ldrb r3,[r3,#2]
  95 000c 5BB2     	 sxtb r3,r3
  96 000e 181C     	 mov r0,r3
  97 0010 FFF7FEFF 	 bl __NVIC_EnableIRQ
 214:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT\interrupt.h **** }
  98              	 .loc 2 214 0
  99 0014 BD46     	 mov sp,r7
 100 0016 02B0     	 add sp,sp,#8
 101              	 
 102 0018 80BD     	 pop {r7,pc}
 103              	 .cfi_endproc
 104              	.LFE203:
 106 001a C046     	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
 107              	 .align 2
 108              	 .code 16
 109              	 .thumb_func
 111              	XMC_GPIO_ToggleOutput:
 112              	.LFB212:
 113              	 .file 3 "N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc/xmc_gpio.h"
   1:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** {
 258:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 261:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** }
 262:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** {
 284:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 287:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** }
 288:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** {
 114              	 .loc 3 309 0
 115              	 .cfi_startproc
 116 0000 80B5     	 push {r7,lr}
 117              	.LCFI6:
 118              	 .cfi_def_cfa_offset 8
 119              	 .cfi_offset 7,-8
 120              	 .cfi_offset 14,-4
 121 0002 82B0     	 sub sp,sp,#8
 122              	.LCFI7:
 123              	 .cfi_def_cfa_offset 16
 124 0004 00AF     	 add r7,sp,#0
 125              	.LCFI8:
 126              	 .cfi_def_cfa_register 7
 127 0006 7860     	 str r0,[r7,#4]
 128 0008 0A1C     	 mov r2,r1
 129 000a FB1C     	 add r3,r7,#3
 130 000c 1A70     	 strb r2,[r3]
 310:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 131              	 .loc 3 312 0
 132 000e FB1C     	 add r3,r7,#3
 133 0010 1B78     	 ldrb r3,[r3]
 134 0012 034A     	 ldr r2,.L7
 135 0014 9A40     	 lsl r2,r2,r3
 136 0016 7B68     	 ldr r3,[r7,#4]
 137 0018 5A60     	 str r2,[r3,#4]
 313:N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc\xmc_gpio.h **** }
 138              	 .loc 3 313 0
 139 001a BD46     	 mov sp,r7
 140 001c 02B0     	 add sp,sp,#8
 141              	 
 142 001e 80BD     	 pop {r7,pc}
 143              	.L8:
 144              	 .align 2
 145              	.L7:
 146 0020 01000100 	 .word 65537
 147              	 .cfi_endproc
 148              	.LFE212:
 150              	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 151              	 .align 2
 152              	 .code 16
 153              	 .thumb_func
 155              	DIGITAL_IO_ToggleOutput:
 156              	.LFB220:
 157              	 .file 4 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 270:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 272:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 273:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 317:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 319:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 320:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 321:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 322:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 323:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 324:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 325:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 326:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 327:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 328:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 329:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 330:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 331:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 332:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 333:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 334:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 335:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 336:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 337:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 338:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 339:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 340:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 341:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 342:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 343:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 344:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 345:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 346:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 347:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 348:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 349:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 350:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 351:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 352:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 353:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 354:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 355:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 356:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 357:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 358:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 359:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 360:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 361:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 363:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 364:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 365:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 366:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 367:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 368:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 158              	 .loc 4 368 0
 159              	 .cfi_startproc
 160 0000 80B5     	 push {r7,lr}
 161              	.LCFI9:
 162              	 .cfi_def_cfa_offset 8
 163              	 .cfi_offset 7,-8
 164              	 .cfi_offset 14,-4
 165 0002 82B0     	 sub sp,sp,#8
 166              	.LCFI10:
 167              	 .cfi_def_cfa_offset 16
 168 0004 00AF     	 add r7,sp,#0
 169              	.LCFI11:
 170              	 .cfi_def_cfa_register 7
 171 0006 7860     	 str r0,[r7,#4]
 369:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 370:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 172              	 .loc 4 370 0
 173 0008 7B68     	 ldr r3,[r7,#4]
 174 000a 1A68     	 ldr r2,[r3]
 175 000c 7B68     	 ldr r3,[r7,#4]
 176 000e 1B7B     	 ldrb r3,[r3,#12]
 177 0010 101C     	 mov r0,r2
 178 0012 191C     	 mov r1,r3
 179 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 371:N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 180              	 .loc 4 371 0
 181 0018 BD46     	 mov sp,r7
 182 001a 02B0     	 add sp,sp,#8
 183              	 
 184 001c 80BD     	 pop {r7,pc}
 185              	 .cfi_endproc
 186              	.LFE220:
 188              	 .comm handSignals,1676,4
 189              	 .comm sensorReadings,16,4
 190 001e C046     	 .section .text.IRQ0_Handler,"ax",%progbits
 191              	 .align 2
 192              	 .global IRQ0_Handler
 193              	 .code 16
 194              	 .thumb_func
 196              	IRQ0_Handler:
 197              	.LFB222:
 198              	 .file 5 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2018 Oct 28 19:54:15
   5:../main.c     ****  *  Author: hdomingu
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** #include "Drivers/MyoHand.h"
  10:../main.c     **** #include "Drivers/MyoDataCollector.h"
  11:../main.c     **** 
  12:../main.c     **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
  13:../main.c     **** 
  14:../main.c     **** struct MyoHand handSignals;
  15:../main.c     **** struct FourTuple sensorReadings;
  16:../main.c     **** 
  17:../main.c     **** //This samples the ADCs connected for the EMG sensors
  18:../main.c     **** void SampleEMGs(void)
  19:../main.c     **** {
 199              	 .loc 5 19 0
 200              	 .cfi_startproc
 201 0000 80B5     	 push {r7,lr}
 202              	.LCFI12:
 203              	 .cfi_def_cfa_offset 8
 204              	 .cfi_offset 7,-8
 205              	 .cfi_offset 14,-4
 206 0002 00AF     	 add r7,sp,#0
 207              	.LCFI13:
 208              	 .cfi_def_cfa_register 7
  20:../main.c     **** 	//Acknowledge interrupt and clear it
  21:../main.c     **** 	TIMER_ClearEvent(&TIMER_0);
 209              	 .loc 5 21 0
 210 0004 174B     	 ldr r3,.L11
 211 0006 181C     	 mov r0,r3
 212 0008 FFF7FEFF 	 bl TIMER_ClearEvent
  22:../main.c     **** 	DIGITAL_IO_ToggleOutput(&LEDpin);
 213              	 .loc 5 22 0
 214 000c 164B     	 ldr r3,.L11+4
 215 000e 181C     	 mov r0,r3
 216 0010 FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
  23:../main.c     **** 	sensorReadings.thumb = ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_thumbChannel);
 217              	 .loc 5 23 0
 218 0014 154B     	 ldr r3,.L11+8
 219 0016 181C     	 mov r0,r3
 220 0018 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 221 001c 031C     	 mov r3,r0
 222 001e 1A1C     	 mov r2,r3
 223 0020 134B     	 ldr r3,.L11+12
 224 0022 1A60     	 str r2,[r3]
  24:../main.c     **** 	sensorReadings.index = ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_indexChannel);
 225              	 .loc 5 24 0
 226 0024 134B     	 ldr r3,.L11+16
 227 0026 181C     	 mov r0,r3
 228 0028 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 229 002c 031C     	 mov r3,r0
 230 002e 1A1C     	 mov r2,r3
 231 0030 0F4B     	 ldr r3,.L11+12
 232 0032 5A60     	 str r2,[r3,#4]
  25:../main.c     **** 	sensorReadings.middle = ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_middleChannel);
 233              	 .loc 5 25 0
 234 0034 104B     	 ldr r3,.L11+20
 235 0036 181C     	 mov r0,r3
 236 0038 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 237 003c 031C     	 mov r3,r0
 238 003e 1A1C     	 mov r2,r3
 239 0040 0B4B     	 ldr r3,.L11+12
 240 0042 9A60     	 str r2,[r3,#8]
  26:../main.c     **** 	sensorReadings.rp = ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_rpChannel);
 241              	 .loc 5 26 0
 242 0044 0D4B     	 ldr r3,.L11+24
 243 0046 181C     	 mov r0,r3
 244 0048 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 245 004c 031C     	 mov r3,r0
 246 004e 1A1C     	 mov r2,r3
 247 0050 074B     	 ldr r3,.L11+12
 248 0052 DA60     	 str r2,[r3,#12]
  27:../main.c     **** 	MyoDataPush(&handSignals.sensorBuffer,&sensorReadings);
 249              	 .loc 5 27 0
 250 0054 0A4A     	 ldr r2,.L11+28
 251 0056 064B     	 ldr r3,.L11+12
 252 0058 101C     	 mov r0,r2
 253 005a 191C     	 mov r1,r3
 254 005c FFF7FEFF 	 bl MyoDataPush
  28:../main.c     **** }
 255              	 .loc 5 28 0
 256 0060 BD46     	 mov sp,r7
 257              	 
 258 0062 80BD     	 pop {r7,pc}
 259              	.L12:
 260              	 .align 2
 261              	.L11:
 262 0064 00000000 	 .word TIMER_0
 263 0068 00000000 	 .word LEDpin
 264 006c 00000000 	 .word ADC_MEASUREMENT_thumbChannel_handle
 265 0070 00000000 	 .word sensorReadings
 266 0074 00000000 	 .word ADC_MEASUREMENT_indexChannel_handle
 267 0078 00000000 	 .word ADC_MEASUREMENT_middleChannel_handle
 268 007c 00000000 	 .word ADC_MEASUREMENT_rpChannel_handle
 269 0080 00000000 	 .word handSignals
 270              	 .cfi_endproc
 271              	.LFE222:
 273              	 .section .text.main,"ax",%progbits
 274              	 .align 2
 275              	 .global main
 276              	 .code 16
 277              	 .thumb_func
 279              	main:
 280              	.LFB223:
  29:../main.c     **** 
  30:../main.c     **** 
  31:../main.c     **** int main(void)
  32:../main.c     **** {
 281              	 .loc 5 32 0
 282              	 .cfi_startproc
 283 0000 90B5     	 push {r4,r7,lr}
 284              	.LCFI14:
 285              	 .cfi_def_cfa_offset 12
 286              	 .cfi_offset 4,-12
 287              	 .cfi_offset 7,-8
 288              	 .cfi_offset 14,-4
 289 0002 83B0     	 sub sp,sp,#12
 290              	.LCFI15:
 291              	 .cfi_def_cfa_offset 24
 292 0004 00AF     	 add r7,sp,#0
 293              	.LCFI16:
 294              	 .cfi_def_cfa_register 7
  33:../main.c     ****   DAVE_STATUS_t status;
  34:../main.c     **** 
  35:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 295              	 .loc 5 35 0
 296 0006 FC1D     	 add r4,r7,#7
 297 0008 FFF7FEFF 	 bl DAVE_Init
 298 000c 031C     	 mov r3,r0
 299 000e 2370     	 strb r3,[r4]
  36:../main.c     **** 
  37:../main.c     ****   if(status != DAVE_STATUS_SUCCESS)
 300              	 .loc 5 37 0
 301 0010 FB1D     	 add r3,r7,#7
 302 0012 1B78     	 ldrb r3,[r3]
 303 0014 002B     	 cmp r3,#0
 304 0016 00D0     	 beq .L14
 305              	.L15:
  38:../main.c     ****   {
  39:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  40:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  41:../main.c     **** 
  42:../main.c     ****     while(1U)
  43:../main.c     ****     {
  44:../main.c     **** 
  45:../main.c     ****     }
 306              	 .loc 5 45 0 discriminator 1
 307 0018 FEE7     	 b .L15
 308              	.L14:
  46:../main.c     ****   }
  47:../main.c     **** 
  48:../main.c     **** 
  49:../main.c     ****   /* 		INITIALIZATION OF VARIOUS COMPONENTS		*/
  50:../main.c     ****   MyoHandINIT(&handSignals);
 309              	 .loc 5 50 0
 310 001a 044B     	 ldr r3,.L17
 311 001c 181C     	 mov r0,r3
 312 001e FFF7FEFF 	 bl MyoHandINIT
  51:../main.c     **** 
  52:../main.c     ****   //enable sampling
  53:../main.c     ****   INTERRUPT_Enable(&samplingInterrupt);
 313              	 .loc 5 53 0
 314 0022 034B     	 ldr r3,.L17+4
 315 0024 181C     	 mov r0,r3
 316 0026 FFF7FEFF 	 bl INTERRUPT_Enable
 317              	.L16:
  54:../main.c     **** 
  55:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  56:../main.c     ****   while(1U)
  57:../main.c     ****   {
  58:../main.c     **** 
  59:../main.c     ****   }
 318              	 .loc 5 59 0 discriminator 2
 319 002a FEE7     	 b .L16
 320              	.L18:
 321              	 .align 2
 322              	.L17:
 323 002c 00000000 	 .word handSignals
 324 0030 00000000 	 .word samplingInterrupt
 325              	 .cfi_endproc
 326              	.LFE223:
 328              	 .text
 329              	.Letext0:
 330              	 .file 6 "n:\\eecs 473\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 331              	 .file 7 "../Drivers/MyoDataCollector.h"
 332              	 .file 8 "../Drivers/MyoHand.h"
 333              	 .file 9 "n:\\eecs 473\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 334              	 .file 10 "N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 335              	 .file 11 "N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc/xmc1_scu.h"
 336              	 .file 12 "N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc/xmc_vadc.h"
 337              	 .file 13 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/ADC_MEASUREMENT/adc_measurement.h"
 338              	 .file 14 "N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc/xmc_ccu4.h"
 339              	 .file 15 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 340              	 .file 16 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/TIMER/timer.h"
 341              	 .file 17 "N:/EECS 473/Myoelectric/myoelectric/Libraries/XMCLib/inc/xmc1_gpio.h"
 342              	 .file 18 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DAVE.h"
 343              	 .file 19 "N:/EECS 473/Myoelectric/myoelectric/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 344              	 .file 20 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/ADC_MEASUREMENT/ADC_MEASUREMENT_Extern.h"
 345              	 .file 21 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/TIMER/timer_extern.h"
 346              	 .file 22 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/INTERRUPT/interrupt_extern.h"
 347              	 .file 23 "N:/EECS 473/Myoelectric/myoelectric/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.__NVIC_EnableIRQ:00000000 $t
    {standard input}:22     .text.__NVIC_EnableIRQ:00000000 __NVIC_EnableIRQ
    {standard input}:66     .text.__NVIC_EnableIRQ:00000030 $d
    {standard input}:71     .text.INTERRUPT_Enable:00000000 $t
    {standard input}:75     .text.INTERRUPT_Enable:00000000 INTERRUPT_Enable
    {standard input}:107    .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:111    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:146    .text.XMC_GPIO_ToggleOutput:00000020 $d
    {standard input}:151    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:155    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
                            *COM*:0000068c handSignals
                            *COM*:00000010 sensorReadings
    {standard input}:191    .text.IRQ0_Handler:00000000 $t
    {standard input}:196    .text.IRQ0_Handler:00000000 IRQ0_Handler
    {standard input}:262    .text.IRQ0_Handler:00000064 $d
    {standard input}:274    .text.main:00000000 $t
    {standard input}:279    .text.main:00000000 main
    {standard input}:323    .text.main:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TIMER_ClearEvent
ADC_MEASUREMENT_GetResult
MyoDataPush
TIMER_0
LEDpin
ADC_MEASUREMENT_thumbChannel_handle
ADC_MEASUREMENT_indexChannel_handle
ADC_MEASUREMENT_middleChannel_handle
ADC_MEASUREMENT_rpChannel_handle
DAVE_Init
MyoHandINIT
samplingInterrupt
